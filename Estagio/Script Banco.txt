CREATE TABLE design
(
	desi_fundo_interface varchar(15) NOT NULL,
	desi_fundo2_interface varchar(15) NOT NULL,
	desi_fonte_interface varchar(15) NOT NULL,
	desi_fundo_botao varchar(15) NOT NULL,
	desi_preenchimento_botao varchar(15) NOT NULL,
	desi_fonte_botao varchar(15) NOT NULL,
	desi_tamanho_botao integer NOT NULL,
	desi_fonte_entrada varchar(15) NOT NULL,
	desi_foco_entrada varchar(15) NOT NULL,
	desi_tamanho_entrada integer NOT NULL,
	desi_opacidade integer NOT NULL
);

CREATE TABLE endereco
(
	ender_codigo serial NOT NULL,
	ender_rua VARCHAR(45) NOT NULL,
	ender_bairro VARCHAR(45) NULL,
	ender_numero INTEGER NOT NULL,
	ender_cidade VARCHAR(45) NOT NULL,
	ender_estado VARCHAR(45) NOT NULL,
	ender_cep VARCHAR(13) NULL,
	ender_complemento VARCHAR(45) NULL,
	CONSTRAINT pk_endereco
		PRIMARY KEY (ender_codigo)
);

create table parametrizacao
(
	para_nome VARCHAR(50) NOT NULL,
	para_fantasia VARCHAR(50) NOT NULL,
	para_logoGrande bytea,
	para_logoPequeno bytea,
	para_email VARCHAR(50) NOT NULL,
	para_razaoSocial varchar(50) NOT NULL,
	CONSTRAINT pk_parametrizacao PRIMARY KEY (para_nome)
);


CREATE TABLE endereco_parametrizacao
(
	para_nome varchar(50) NOT NULL,
	ender_codigo integer NOT NULL,
	CONSTRAINT fk_enderPara 
		FOREIGN KEY (para_nome)
		REFERENCES parametrizacao ON UPDATE CASCADE ON DELETE CASCADE,
	CONSTRAINT fk_enderPara_endereco 
		FOREIGN KEY (ender_codigo)
		REFERENCES endereco ON DELETE CASCADE
);

CREATE TABLE cliente
(
	cli_codigo serial NOT NULL,
	cli_nome VARCHAR(45) NOT NULL,
	cli_cpf VARCHAR(15) NOT NULL UNIQUE,
	cli_rg varchar(15) not null,
	cli_datacadastro DATE NOT NULL,
	cli_email VARCHAR(45) NULL ,
	cli_ativo BOOLEAN NOT NULL,
	cli_alteracao TIMESTAMP NOT NULL,
	ender_codigo INTEGER NOT NULL,
	CONSTRAINT pk_cliente
		PRIMARY KEY (cli_codigo) ,
	CONSTRAINT fk_cliente_endereco
		FOREIGN KEY (ender_codigo)
		REFERENCES endereco ON DELETE CASCADE
);

CREATE TABLE funcionario
(
	func_codigo serial NOT NULL,
	func_nome VARCHAR(45) NOT NULL,
	func_cpf VARCHAR(15) NOT NULL UNIQUE,
	func_rg varchar(15) not null,
	func_email VARCHAR(45) NULL ,
	func_funcao VARCHAR(45) NOT NULL,
	func_datacadastro DATE NOT NULL,
	func_ativo BOOLEAN NOT NULL,
	func_alteracao TIMESTAMP NOT NULL,
	ender_codigo INTEGER NOT NULL,
	func_vencimento_cnh DATE,
	func_cnh_frente bytea,
	func_cnh_verso bytea,
	CONSTRAINT pk_funcionario
		PRIMARY KEY (func_codigo) ,
	CONSTRAINT fk_funcionario_endereco
		FOREIGN KEY (ender_codigo)
		REFERENCES endereco ON DELETE CASCADE
);

CREATE TABLE fornecedor
(
	forn_codigo serial NOT NULL,
	forn_nome VARCHAR(45) NOT NULL,
	forn_cnpj VARCHAR(18) NOT NULL UNIQUE,
	forn_email VARCHAR(45) NULL,
	forn_ativo BOOLEAN NOT NULL,
	forn_alteracao TIMESTAMP NOT NULL,
	ender_codigo INTEGER NOT NULL,
	CONSTRAINT pk_fornecedor
		PRIMARY KEY (forn_codigo) ,
	CONSTRAINT fk_fornecedor_endereco
		FOREIGN KEY (ender_codigo)
		REFERENCES endereco ON DELETE CASCADE
);

CREATE TABLE telefone
(
	tel_codigo serial NOT NULL,
	tel_numero VARCHAR(11) NULL,
	cli_codigo INTEGER NULL,
	func_codigo INTEGER NULL,
	forn_codigo INTEGER NULL,
	para_nome VARCHAR(50) NULL,
	CONSTRAINT pk_telefone
		PRIMARY KEY (tel_codigo) ,
	CONSTRAINT fk_telefone_cliente
		FOREIGN KEY (cli_codigo)
		REFERENCES cliente ON DELETE CASCADE,
	CONSTRAINT fk_telefone_funcionario
		FOREIGN KEY (func_codigo)
		REFERENCES funcionario ON DELETE CASCADE,
	CONSTRAINT fk_telefone_fornecedor
		FOREIGN KEY (forn_codigo)
		REFERENCES fornecedor ON DELETE CASCADE,
	CONSTRAINT fk_telefone_parametrizacao
		FOREIGN KEY (para_nome)
		REFERENCES parametrizacao ON UPDATE CASCADE
);


CREATE TABLE MARCA
(
	marca_codigo INTEGER NOT NULL,
	marca_nome VARCHAR(45) NOT NULL UNIQUE,
	CONSTRAINT pk_marca
		PRIMARY KEY (marca_codigo)
);

CREATE TABLE MODELO
(
	modelo_codigo serial NOT NULL,
	modelo_nome VARCHAR(45) NOT NULL,
	marca_codigo INTEGER NOT NULL,
	CONSTRAINT pk_modelo
		PRIMARY KEY (modelo_codigo),
	CONSTRAINT fk_modelo_marca
		FOREIGN KEY (marca_codigo)
		REFERENCES marca ON DELETE CASCADE
);

CREATE TABLE Veiculo
(
 	vei_codigo serial NOT NULL,
 	vei_chassi VARCHAR(45) NULL,
	vei_placa VARCHAR(8) NULL UNIQUE,
	vei_modelo VARCHAR(45) NOT NULL ,
	vei_marca VARCHAR(45) NOT NULL ,
	vei_ano INTEGER NOT NULL ,
	vei_cor VARCHAR(45) NOT NULL ,
	vei_descricao VARCHAR(45) NULL ,
  	CONSTRAINT pk_veiculo
		PRIMARY KEY (vei_codigo)
);

CREATE TABLE Usuario
(
	user_codigo serial NOT NULL,
	user_nome VARCHAR(45) NOT NULL UNIQUE,
	user_senha VARCHAR(45) NOT NULL,
	user_nivel VARCHAR(5) NOT NULL,
	user_ativo BOOLEAN NOT NULL,
	func_codigo INTEGER NULL,
	CONSTRAINT pk_usario
		PRIMARY KEY (user_codigo),
	CONSTRAINT fk_usuario_funcionario
		FOREIGN KEY(func_codigo)
		REFERENCES funcionario ON DELETE CASCADE
);

CREATE TABLE Acessos
(
	acess_codigo serial NOT NULL,
	acess_data_login TIMESTAMP NOT NULL UNIQUE,
	acess_data_logout TIMESTAMP NOT NULL UNIQUE,
	user_codigo INTEGER NOT NULL,
	CONSTRAINT pk_acesso
		PRIMARY KEY (acess_codigo),
	CONSTRAINT fk_user_codigo
		FOREIGN KEY (user_codigo)
		REFERENCES usuario ON DELETE CASCADE
);

CREATE TABLE forma_pagamento
(
	form_pagamento_codigo SERIAL NOT NULL,
	form_pagamento_nome VARCHAR(45) NOT NULL,
	form_pagamento_descricao VARCHAR(90) NULL,
	CONSTRAiNT pk_forma_pagamento
		PRIMARY KEY(form_pagamento_codigo)
);

CREATE TABLE Compra
(
  	comp_codigo serial NOT NULL ,
  	forn_codigo INTEGER NULL ,
	cli_codigo INTEGER NULL,
  	comp_qtd_parcelas INTEGER NOT NULL ,
  	comp_valor_total DECIMAL(10,2) NOT NULL ,
  	comp_ajuste DECIMAL(10,2) NOT NULL ,
  	comp_data_compra DATE NOT NULL,
	comp_nota_fiscal VARCHAR(45) NOT NULL,
	comp_data_emissao DATE NOT NULL,
	comp_vendedor VARCHAR(45) NULL,
  	CONSTRAINT pk_compra
		PRIMARY KEY (comp_codigo) ,
  	CONSTRAINT fk_compra_fornecedor
		FOREIGN KEY (forn_codigo)
		REFERENCES fornecedor (forn_codigo),
	CONSTRAINT pk_compra_cliente
		FOREIGN KEY (cli_codigo)
		REFERENCES cliente
);

CREATE TABLE veiculo_compra
(
	comp_codigo INTEGER NOT NULL,
	vei_codigo INTEGER NOT NULL,
	vei_comp_valor DECIMAL(10,2) NOT NULL,
	CONSTRAINT pk_veiculo_compra
		PRIMARY KEY(comp_codigo,vei_codigo),
	CONSTRAINT fk_veiculo_compra_compra
		FOREIGN KEY(comp_codigo)
		REFERENCES compra(comp_codigo) ON DELETE CASCADE,
	CONSTRAINT fk_veiculo_compra_veiculo
		FOREIGN KEY(vei_codigo)
		REFERENCES veiculo(vei_codigo) ON DELETE CASCADE
);

CREATE TABLE venda
(
  	ven_codigo serial NOT NULL ,
  	cli_codigo INTEGER NULL ,
	forn_codigo INTEGER NULL,
  	ven_qtd_parcelas INTEGER NOT NULL ,
  	ven_valor_total DECIMAL(10,2) NOT NULL ,
  	ven_ajuste DECIMAL(10,2) NOT NULL ,
  	ven_data_compra DATE NOT NULL,
	ven_nota_fiscal VARCHAR(45) NOT NULL,
	ven_data_emissao DATE NOT NULL,
  	CONSTRAINT pk_venda
		PRIMARY KEY (ven_codigo) ,
  	CONSTRAINT fk_venda_cliente
		FOREIGN KEY (cli_codigo)
		REFERENCES cliente,
	CONSTRAINT fk_venda_fornecedor
		FOREIGN KEY (forn_codigo)
		REFERENCES fornecedor
);

CREATE TABLE parcela
(
	parc_codigo serial NOT NULL,
	parc_status INTEGER NULL,
	parc_dataVencimento DATE NOT NULL,
	parc_numero INTEGER NOT NULL,
	parc_dataPagamento DATE,
	parc_valorPago DECIMAL(6,2),
	parc_valorParcela DECIMAL(10,2) NOT NULL,
	ven_codigo INTEGER NULL,
	comp_codigo INTEGER NULL,
	CONSTRAINT pk_parcela
		PRIMARY KEY(parc_codigo),
	CONSTRAINT fk_parcela_venda 
		FOREIGN KEY(ven_codigo) 
		REFERENCES venda(ven_codigo) ON DELETE CASCADE,
	CONSTRAINT fk_parc_compra 
		FOREIGN KEY(comp_codigo) 
		REFERENCES compra(comp_codigo) ON DELETE CASCADE
);

CREATE TABLE veiculo_venda
(
	ven_codigo INTEGER NOT NULL,
	vei_codigo INTEGER NOT NULL,
	vei_ven_valor DECIMAL(10,2) NOT NULL,
	CONSTRAINT pk_veiculo_venda
		PRIMARY KEY(ven_codigo,vei_codigo),
	CONSTRAINT fk_venda_veiculo_venda
		FOREIGN KEY(ven_codigo)
		REFERENCES venda ON DELETE CASCADE,
	CONSTRAINT fk_veiculo_venda_veiculo
		FOREIGN KEY(vei_codigo)
		REFERENCES veiculo ON DELETE CASCADE
);

CREATE TABLE recebimento
(
  	rec_codigo serial NOT NULL,
  	rec_data Date NOT NULL ,
  	rec_valor DECIMAL(10,2) NOT NULL,
	parc_codigo INTEGER NULL,
	rec_forma_pagamento VARCHAR(12) not null,
	rec_ativo boolean NOT NULL,--TRUE == PAGAMENTO | FALSE == ESTORNO
  	CONSTRAINT pk_recebimento
		PRIMARY KEY (rec_codigo) ,
	CONSTRAINT fk_recebimento_parcela 
		FOREIGN KEY (parc_codigo) 
		REFERENCES parcela
);

CREATE TABLE registro_recebimento
(
	reg_rec_codigo serial NOT NULL,
	rec_codigo INTEGER NOT NULL,
	reg_rec_relatorio VARCHAR(200) NOT NULL,
	reg_rec_data DATE NOT NULL,
	func_codigo INTEGER NOT NULL,
	CONSTRAINT pk_registro_recebimento
		PRIMARY KEY(reg_rec_codigo),
	CONSTRAINT fk_registro_rec_recebimento
		FOREIGN KEY(rec_codigo)
		REFERENCES recebimento,
	CONSTRAINT fk_reg_pagamento_funcionario
		FOREIGN KEY (func_codigo)
		REFERENCES funcionario
);

CREATE TABLE transporte
(
	trans_codigo serial NOT NULL,
	func_codigo INTEGER NOT NULL,
	vei_codigo INTEGER NOT NULL,
	trans_data_saida DATE NOT NULL,
	trans_data_chegada DATE,
	trans_status VARCHAR(45) NOT NULL,
	trans_tipo VARCHAR(45) NOT NULL,
	trans_data_alteracao DATE NOT NULL,
	CONSTRAINT pk_transporte
		PRIMARY KEY(trans_codigo),
	CONSTRAINT fk_transporte_funcionario
		FOREIGN KEY(func_codigo)
		REFERENCES funcionario,
	CONSTRAINT fk_transporte_veiculo
		FOREIGN KEY(vei_codigo)
		REFERENCES veiculo
);

CREATE TABLE veiculos_transportados
(
	trans_codigo INTEGER NOT NULL,
	vei_codigo INTEGER NOT NULL,
	CONSTRAINT pk_veiculos_transportados
		PRIMARY KEY(trans_codigo,vei_codigo),
	CONSTRAINT fk_vei_transportados_transporte
		FOREIGN KEY(trans_codigo)
		REFERENCES transporte,
	CONSTRAINT fk_vei_transportados_veiculos
		FOREIGN KEY(vei_codigo)
		REFERENCES veiculo
);

CREATE TABLE despesa
(
	desp_codigo serial NOT NULL,
	desp_nome VARCHAR(45) NOT NULL,
	desp_fixo BOOLEAN NOT NULL,
	desp_preco DECIMAL (10,2) NOT NULL,
	desp_data_vencimento DATE NOT NULL,
	desp_descricao VARCHAR(45),
	trans_codigo INTEGER NULL,
	CONSTRAINT pk_despesa
		PRIMARY KEY (desp_codigo),
	CONSTRAINT fk_despesa_transporte
		FOREIGN KEY (trans_codigo)
		REFERENCES transporte
);



CREATE TABLE Pagamento
(
  	pag_codigo serial NOT NULL,
  	pag_data Date NOT NULL ,
  	pag_valor DECIMAL(10,2) NOT NULL,
	parc_codigo INTEGER NULL,
	pag_forma_pagamento VARCHAR(12) not null,
	pag_ativo boolean NOT NULL,--TRUE == PAGAMENTO | FALSE == ESTORNO
	desp_codigo INTEGER NULL,
  	CONSTRAINT pk_pagamento
		PRIMARY KEY (pag_codigo) ,
	CONSTRAINT fk_pagamento_parcela 
		FOREIGN KEY (parc_codigo) 
		REFERENCES parcela (parc_codigo),
	CONSTRAINT fk_pagamento_despesa
		FOREIGN KEY(desp_codigo)
		REFERENCES despesa
);

CREATE TABLE registro_pagamento
(
	reg_pag_codigo serial NOT NULL,
	pag_codigo INTEGER NOT NULL,
	reg_pag_relatorio VARCHAR(200) NOT NULL,
	reg_pag_data DATE NOT NULL,
	func_codigo INTEGER NOT NULL,
	CONSTRAINT pk_registro_pagamento
		PRIMARY KEY(reg_pag_codigo),
	CONSTRAINT fk_registro_pag_pagamento
		FOREIGN KEY(pag_codigo)
		REFERENCES pagamento,
	CONSTRAINT fk_reg_pagamento_funcionario
		FOREIGN KEY (func_codigo)
		REFERENCES funcionario
);

insert into usuario(user_nome, user_senha, user_nivel,user_ativo) values ('admin','admin','alto',true);
--insert into design(desi_fundo_interface, desi_fundo2_interface, desi_fonte_interface, desi_fonte_botao,
--	desi_fundo_botao, desi_preenchimento_botao, desi_tamanho_botao, desi_fonte_entrada,
--	desi_foco_entrada, desi_tamanho_entrada, desi_opacidade) 
--	values('#FFFFFF','#E0E0E0','#212121','transparent','#212121','#000000',12,'#212121','#212121',12,100);
--alter table funcionario add column func_funcao VARCHAR(45) NOT NULL;

